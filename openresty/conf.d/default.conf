map  $http_upgrade  $connection_upgrade {
    default  upgrade;
    ''       close;
}

upstream auth_backend {
    server  127.0.0.1:8001;

    keepalive  16;
}

# Authentication
server {
    listen  127.0.0.1:8001;

    location / {
        add_header  bearer_token  "GeneratedJWTTokenForPath:$http_x_original_uri";
        empty_gif;
    }
}

# REST requests always get Bearer token from auth backend because of `auth_request` directive
server {
    listen  127.0.0.1:8002;

    location / {
        default_type  text/plain;
        content_by_lua_block {
            ngx.say("Authorization: " .. ngx.var.http_authorization)
        }
    }
}

server {
    listen  8080;

    location = /auth {
        internal;

        # connection params to use `keepalive` in upstream
        proxy_http_version  1.1;
        proxy_set_header  Connection  "";

        # do not pass request body
        proxy_set_header  Content-Length  "";
        proxy_pass_request_body  off;

        # pass original request URI
        proxy_set_header  X-Original-URI  $request_uri;

        proxy_pass  http://auth_backend;
    }

    location / {
        # auth backend sets bearer token in Bearer-Token response header
        auth_request  /auth;
        auth_request_set  $bearer_token  $upstream_http_bearer_token;

        # pass the token to the backend
        proxy_set_header  Authorization  "Bearer $bearer_token";

        proxy_pass  http://localhost:8002;
    }

    location /stream {
        # auth backend sets bearer token in Bearer-Token response header
        auth_request  /auth;
        auth_request_set  $bearer_token  $upstream_http_bearer_token;

        # pass the token to the backend
        proxy_set_header  Authorization  "Bearer $bearer_token";

        # websocket upgrade
        proxy_http_version  1.1;
        proxy_set_header  Upgrade  $http_upgrade;
        proxy_set_header  Connection  $connection_upgrade;

        proxy_pass  http://websocket:8000;
    }
}
